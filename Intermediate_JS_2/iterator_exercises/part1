var users = [
{
  username: "larry",
  email: "larry@foo.com",
  yearsExperience: 22.1,
  favoriteLanguages: ["Perl", "Java", "C++"],
  favoriteEditor: "Vim",
  hobbies: ["Fishing", "Sailing", "Hiking"],
  hometown: {
    city: "San Francisco",
    state: "CA"
  }
},
{
  username: "jane",
  email: "jane@test.com",
  yearsExperience: 33.9,
  favoriteLanguages: ["Haskell", "Clojure", "PHP"],
  favoriteEditor: "Emacs",
  hobbies: ["Swimming", "Biking", "Hiking"],
  hometown: {
    city: "New York",
    state: "NY"
  }
},
{
  username: "sam",
  email: "sam@test.com",
  yearsExperience: 8.2,
  favoriteLanguages: ["JavaScript","Ruby", "Python", "Go"],
  favoriteEditor: "Atom",
  hobbies: ["Golf", "Cooking", "Archery"],
  hometown: {
    city: "Fargo",
    state: "SD"
  }
},
{
  username: "anne",
  email: "anne@test.com",
  yearsExperience: 4,
  favoriteLanguages: ["C#", "C++", "F#"],
  favoriteEditor: "Visual Studio Code",
  hobbies: ["Tennis", "Biking", "Archery"],
  hometown: {
    city: "Albany",
    state: "NY"
  }
},
{
  username: "david",
  email: "david@test.com",
  yearsExperience: 12.5,
  favoriteLanguages: ["JavaScript", "C#", "Swift"],
  favoriteEditor: "Sublime Text",
  hobbies: ["Volunteering", "Biking", "Coding"],
  hometown: {
    city: "Los Angeles",
    state: "CA"
  }
}
];

function printEmails(arr) {
  arr.forEach(function(val,pos) {
      console.log(val.email);
  });
} 
printEmails(users);



function printHobbies(arr) {
  arr.forEach(function(user) {
    user.hobbies.forEach(function(hobby) {
      console.log(hobby);
    });
  });
}
printHobbies(users);

//enter a state
//filter into each user.hometown.state
//if equals state, then pull user

function findHometownByState(input) {
  return users.find(function(val) {
    return val.hometown.state == input;
  });
}
findHometownByState("CA");


//map to create array of each user.language
//filter map for duplicates
function allLanguages() {
  var result = [];
    users.forEach(function(user) {
      user.favoriteLanguages.forEach(function(lang) {
        if(result.indexOf(lang) === -1) {
          result.push(lang);
        }
      });
    });
    return result;
}
allLanguages();



function hasFavoriteEditor(editor) {
  //get favoriteeite array
  var editors = [];
  return users.map(function(user) {
    return user.favoriteEditor;
  }).some(function(editor) {
    return editor === editor;
  });
}
hasFavoriteEditor("Sublime Text");



function findByUsername(str) {
  return users.filter(function(user) {
    return user.username === str;
  });
}
findByUsername("david");






